name: Release Model Docker Image

on:
  release:
    types: [published]

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Show GitHub tag for debugging
      - name: Show GitHub tag
        run: echo "GitHub tag: ${{ github.ref_name }}"

      # Train the correct model version
      - name: Train model based on tag
        run: |
          TAG_NAME="${{ github.ref_name }}"
          echo "Training model for tag $TAG_NAME"
          if [[ "${TAG_NAME}" == v0.2-rf* ]]; then
            python train_v2_rf.py
          elif [[ "${TAG_NAME}" == v0.2* ]]; then
            python train_v2.py
          elif [[ "${TAG_NAME}" == v0.1* ]]; then
            python train.py
          else
            echo "No matching train script for tag $TAG_NAME"
            exit 1
          fi
        shell: bash

      # Build Docker image with correct version
      - name: Build Docker image
        run: |
          TAG_NAME="${{ github.ref_name }}"
          echo "Building Docker image for $TAG_NAME"
          if [[ "${TAG_NAME}" == v0.2-rf* ]]; then
            docker build --build-arg MODEL_VERSION=v0.2-rf -t virtual-diabetes:v0.2-rf .
          elif [[ "${TAG_NAME}" == v0.2* ]]; then
            docker build --build-arg MODEL_VERSION=v0.2 -t virtual-diabetes:v0.2 .
          elif [[ "${TAG_NAME}" == v0.1* ]]; then
            docker build --build-arg MODEL_VERSION=v0.1 -t virtual-diabetes:v0.1 .
          else
            echo "No matching Docker build for tag $TAG_NAME"
            exit 1
          fi
        shell: bash

      # Log in to GHCR
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Push Docker image
      - name: Push Docker image
        run: |
          TAG_NAME="${{ github.ref_name }}"
          if [ "${TAG_NAME}" = "v0.1" ] || [[ "${TAG_NAME}" == v0.1* ]]; then
            docker tag virtual-diabetes:v0.1 ghcr.io/${{ github.repository_owner }}/virtual-diabetes:v0.1
            docker push ghcr.io/${{ github.repository_owner }}/virtual-diabetes:v0.1
          elif [ "${TAG_NAME}" = "v0.2" ] || [[ "${TAG_NAME}" == v0.2 ]]; then
            docker tag virtual-diabetes:v0.2 ghcr.io/${{ github.repository_owner }}/virtual-diabetes:v0.2
            docker push ghcr.io/${{ github.repository_owner }}/virtual-diabetes:v0.2
          elif [[ "${TAG_NAME}" == v0.2-rf* ]]; then
            docker tag virtual-diabetes:v0.2-rf ghcr.io/${{ github.repository_owner }}/virtual-diabetes:v0.2-rf
            docker push ghcr.io/${{ github.repository_owner }}/virtual-diabetes:v0.2-rf
          fi
        shell: bash

      # Upload model artifacts
      - name: Upload model artifacts
        uses: actions/upload-artifact@v4
        with:
          name: model-artifacts
          path: model/

      # Attach model files to GitHub release
      - name: Attach model files to release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            model/model.joblib
            model/metrics.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
